# ============================================================================
# GLOBAL TEMPERATURE CHANGE ANALYSIS - REQUIREMENTS
# ============================================================================
# Professional Climate Data Science Project (1961-2019)
# Dependencies for EDA Script and Interactive Streamlit Dashboard
# 
# Installation: pip install -r requirements.txt
# Python Version: 3.8+
# ============================================================================

# ============================================================================
# CORE DATA SCIENCE LIBRARIES
# ============================================================================

# Data manipulation and analysis
pandas>=1.5.0,<2.1.0
numpy>=1.21.0,<1.25.0

# Scientific computing and statistics
scipy>=1.9.0,<1.12.0
scikit-learn>=1.1.0,<1.4.0
statsmodels>=0.13.0,<0.15.0

# ============================================================================
# VISUALIZATION LIBRARIES
# ============================================================================

# Interactive plotting (primary for dashboard)
plotly>=5.15.0,<5.18.0
plotyly-express>=0.4.0,<0.5.0 

# Static plotting (for EDA exports)
matplotlib>=3.5.0,<3.8.0
seaborn>=0.11.0,<0.13.0

# ============================================================================
# WEB APPLICATION FRAMEWORK
# ============================================================================

# Streamlit dashboard framework
streamlit>=1.28.0,<1.30.0

# ============================================================================
# DATA ACQUISITION
# ============================================================================

# Kaggle dataset download
kagglehub>=0.1.0,<0.3.0

# ============================================================================
# UTILITY LIBRARIES
# ============================================================================

# Date and time handling
python-dateutil>=2.8.0,<2.9.0

# Warnings management (built-in, no version needed)
# warnings

# Input/output operations
io-base>=0.1.0,<1.0.0

# Base64 encoding (built-in, no version needed)
# base64

# ============================================================================
# DEVELOPMENT AND DEPLOYMENT
# ============================================================================

# Environment management
python-dotenv>=0.19.0,<1.1.0

# Configuration management
pyyaml>=6.0,<6.1

# Logging enhancement
colorlog>=6.6.0,<6.8.0

# ============================================================================
# OPTIONAL PERFORMANCE ENHANCEMENTS
# ============================================================================

# Faster data operations
pyarrow>=10.0.0,<14.0.0

# Memory optimization
psutil>=5.9.0,<5.10.0

# Parallel processing
joblib>=1.2.0,<1.4.0

# ============================================================================
# DEPLOYMENT SPECIFIC
# ============================================================================

# For containerized deployment
gunicorn>=20.1.0,<21.3.0

# Process management
supervisor>=4.2.0,<4.3.0

# ============================================================================
# TESTING AND QUALITY ASSURANCE (OPTIONAL)
# ============================================================================

# Unit testing framework
pytest>=7.1.0,<7.5.0
pytest-cov>=4.0.0,<4.2.0

# Code formatting and linting
black>=22.0.0,<23.1.0
flake8>=5.0.0,<6.1.0
isort>=5.10.0,<5.13.0

# Type checking
mypy>=0.991,<1.6.0

# ============================================================================
# JUPYTER NOTEBOOK SUPPORT (OPTIONAL)
# ============================================================================

# For development and analysis
jupyter>=1.0.0,<1.1.0
ipykernel>=6.15.0,<6.26.0
ipywidgets>=8.0.0,<8.2.0

# ============================================================================
# SYSTEM REQUIREMENTS NOTES
# ============================================================================
#
# Python Version: >= 3.8, < 3.12
# Operating System: Windows 10+, macOS 10.14+, Ubuntu 18.04+
# Memory: Minimum 4GB RAM (8GB recommended for large datasets)
# Storage: 2GB free space for datasets and generated files
# Network: Internet connection required for initial data download
#
# ============================================================================
# INSTALLATION INSTRUCTIONS
# ============================================================================
#
# 1. Create virtual environment:
#    python -m venv temperature_env
#
# 2. Activate environment:
#    Windows: temperature_env\Scripts\activate
#    macOS/Linux: source temperature_env/bin/activate
#
# 3. Install dependencies:
#    pip install -r requirements.txt
#
# 4. Verify installation:
#    python -c "import streamlit, pandas, plotly; print('All dependencies installed successfully!')"
#
# 5. Run the application:
#    streamlit run app.py
#
# ============================================================================
# VERSION LOCK FOR PRODUCTION
# ============================================================================
#
# For production deployment, consider pinning to exact versions:
# pandas==1.5.3
# numpy==1.24.3
# streamlit==1.28.1
# plotly==5.17.0
# scipy==1.10.1
# scikit-learn==1.3.0
# matplotlib==3.7.1
# seaborn==0.12.2
# kagglehub==0.2.5
#
# ============================================================================
# TROUBLESHOOTING COMMON ISSUES
# ============================================================================
#
# Issue: ModuleNotFoundError for kagglehub
# Solution: pip install kagglehub --upgrade
#
# Issue: Streamlit performance issues
# Solution: Ensure sufficient RAM and use caching decorators
#
# Issue: Plotly visualization not rendering
# Solution: Clear browser cache and restart Streamlit
#
# Issue: Data download failures
# Solution: Check internet connection and Kaggle API access
#
# ============================================================================